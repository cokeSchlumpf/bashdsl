/*
 * generated by Xtext
 */
package com.wellnr.generator

import com.google.inject.Inject
import com.wellnr.bashDSL.Argument
import com.wellnr.bashDSL.Script
import java.util.Calendar
import java.util.List
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess
import org.eclipse.xtext.generator.IGenerator

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class BashDSLGenerator implements IGenerator {

	@Inject
	extension StringUtil stringUtil

	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(typeof(Greeting))
//				.map[name]
//				.join(', '))
		resource.allContents.filter(typeof(Script)).forEach [ script |
			fsa.generateFile(script.name + ".sh", doGenerate(script).toString())
		]
	}

	private def doGenerate(Script script) {
		'''
			#!/bin/bash
			#
			# (c) «IF script.copyright != null» «script.copyright» «ELSE»michael.wellner@de.ibm.com «Calendar.getInstance().get(Calendar.YEAR)».«ENDIF»
			#
			«doGenerateHelp(script).toString().comment»
			#
			
			«doGenerateInitialize(script.arguments)»
			
			show_help_and_exit() {
				«doGenerateHelp(script).toString().echo»
				echo
				sleep 3
				exit $1
			}
		'''
	}

	private def doGenerateHelp(Script script) {
		'''
			This script «script.description.ensureSentence»
			
			Usage:
				«script.name» [ -h | --help | OPTIONS ]
				
			Options:
				«FOR arg : script.arguments»
					«doGenerateHelp(arg)»
				«ENDFOR»
		'''
	}

	private def doGenerateHelp(Argument argument) {
		'''
			«argument.name»
			«IF (argument.optional)»Optional. «ENDIF»«IF (argument.^default != null)»Default: «argument.^default».«ENDIF»
				«argument.description.ensureSentence»
		'''
	}
	
	private def doGenerateInitialize(List<Argument> arguments) {
		'''
			«FOR arg : arguments»
				«arg.name.variableName»=
			«ENDFOR»
		'''
	}
}
